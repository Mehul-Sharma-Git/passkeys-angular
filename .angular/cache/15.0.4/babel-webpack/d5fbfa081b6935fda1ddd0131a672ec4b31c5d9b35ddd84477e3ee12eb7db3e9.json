{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../todo.service\";\nimport * as i2 from \"@angular/common\";\nfunction TodoComponent_li_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 10)(1, \"div\", 11)(2, \"input\", 12);\n    i0.ɵɵlistener(\"change\", function TodoComponent_li_13_Template_input_change_2_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.updateCompleted);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"label\", 13);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function TodoComponent_li_13_Template_button_click_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const todo_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.deleteTodo(todo_r1.id));\n    });\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(6, \"svg\", 15);\n    i0.ɵɵelement(7, \"path\", 16);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const todo_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"id\", todo_r1.id);\n    i0.ɵɵpropertyInterpolate1(\"value\", \" \", todo_r1.id, \" \");\n    i0.ɵɵproperty(\"checked\", todo_r1.completed);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"for\", \" \", todo_r1.id, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(todo_r1.todo);\n  }\n}\nexport class TodoComponent {\n  constructor(todoService) {\n    this.todoService = todoService;\n    this.todos = [];\n    this.todo = '';\n  }\n  // list todos on init\n  ngOnInit() {\n    this.listTodos();\n  }\n  /**\n   * function to update the todo body\n   * @param event event\n   */\n  updateBody(event) {\n    this.todo = event.target.value;\n    console.log({\n      body: this.todo\n    });\n  }\n  /**\n   * function to update the todo completed state\n   */\n  updateCompleted(event) {\n    const {\n      currentTarget\n    } = event;\n    this.updateTodo({\n      id: currentTarget.id,\n      completed: currentTarget.checked\n    });\n    console.log({\n      currentTarget\n    });\n  }\n  /**\n   * function to list todos\n   */\n  listTodos() {\n    this.todoService.listTodos().then(todos => {\n      this.todos = todos;\n      console.log({\n        todos\n      });\n    });\n  }\n  /**\n   * function to add a todo\n   * @param event event\n   */\n  addTodo(event) {\n    console.log({\n      event\n    });\n    event.preventDefault();\n    const todo = {\n      todo: this.todo,\n      completed: false,\n      userId: 1\n    };\n    this.todoService.addTodo(todo).then(todo => {\n      this.todos.push(todo);\n      this.todo = '';\n      console.log({\n        todo\n      });\n    });\n  }\n  /**\n   * function to update a todo\n   * @param param0 todo to update\n   */\n  updateTodo({\n    id,\n    completed\n  }) {\n    this.todoService.updateTodo({\n      id,\n      completed\n    }).then(todo => {\n      this.todos.push(todo);\n      console.log({\n        todo\n      });\n      console.log({\n        todos: this.todos\n      });\n    });\n  }\n  /**\n   * function to delete a todo\n   * @param id - id of todo to delete\n   */\n  deleteTodo(id) {\n    this.todoService.deleteTodo(id).then(todo => {\n      this.todos = this.todos.filter(todo => todo.id !== id);\n      console.log({\n        todo\n      });\n    });\n  }\n}\nTodoComponent.ɵfac = function TodoComponent_Factory(t) {\n  return new (t || TodoComponent)(i0.ɵɵdirectiveInject(i1.TodoService));\n};\nTodoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TodoComponent,\n  selectors: [[\"app-todo\"]],\n  decls: 14,\n  vars: 2,\n  consts: [[1, \"todo-header\"], [1, \"wrapper\"], [1, \"font-bold\", \"text-2xl\"], [1, \"todo-section\", \"site-section\"], [1, \"todo-form\", 3, \"submit\"], [1, \"form-group\"], [\"type\", \"text\", \"placeholder\", \"Add a new todo\", 1, \"input\", 3, \"value\", \"change\"], [\"type\", \"submit\", 1, \"cta\", \"shrink\", \"!grow-0\"], [1, \"todo-list\"], [\"class\", \"todo-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"todo-item\"], [1, \"todo-item__content\"], [\"type\", \"checkbox\", 1, \"input\", 3, \"id\", \"value\", \"checked\", \"change\"], [3, \"for\"], [\"type\", \"button\", 1, \"todo-item__delete\", \"cta\", 3, \"click\"], [\"width\", \"24\", \"height\", \"24\", \"viewBox\", \"0 0 24 24\", \"fill\", \"none\", \"xmlns\", \"http://www.w3.org/2000/svg\"], [\"d\", \"M19 6.41L17.59 5L12 10.59L6.41 5L5 6.41L10.59 12L5 17.59L6.41 19L12 13.41L17.59 19L19 17.59L13.41 12L19 6.41Z\", \"fill\", \"currentColor\"]],\n  template: function TodoComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"main\")(1, \"header\", 0)(2, \"div\", 1)(3, \"h1\", 2);\n      i0.ɵɵtext(4, \"My todo list\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(5, \"section\", 3)(6, \"div\", 1)(7, \"form\", 4);\n      i0.ɵɵlistener(\"submit\", function TodoComponent_Template_form_submit_7_listener($event) {\n        return ctx.addTodo($event);\n      });\n      i0.ɵɵelementStart(8, \"div\", 5)(9, \"input\", 6);\n      i0.ɵɵlistener(\"change\", function TodoComponent_Template_input_change_9_listener($event) {\n        return ctx.updateBody($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"button\", 7);\n      i0.ɵɵtext(11, \"Add\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(12, \"ul\", 8);\n      i0.ɵɵtemplate(13, TodoComponent_li_13_Template, 8, 5, \"li\", 9);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.todo);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.todos);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0b2RvLmNvbXBvbmVudC5zY3NzIn0= */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdG9kby90b2RvLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSxnS0FBZ0siLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","TodoComponent","constructor","todoService","ngOnInit","listTodos","updateBody","event","todo","target","value","console","log","body","updateCompleted","currentTarget","updateTodo","id","completed","checked","then","todos","addTodo","preventDefault","userId","push","deleteTodo","filter","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/mehulsharma/projects/practice/passkeys-angular/src/app/todo/todo.component.html","/Users/mehulsharma/projects/practice/passkeys-angular/src/app/todo/todo.component.ts"],"sourcesContent":["<!-- ./src/app/todo/todo.component.html -->\n<main>\n    <header class=\"todo-header\">\n      <div class=\"wrapper\">\n        <h1 class=\"font-bold text-2xl\">My todo list</h1>\n      </div>\n    </header>\n    <section class=\"todo-section site-section\">\n      <div class=\"wrapper\">\n        <form (submit)=\"addTodo($event)\" class=\"todo-form\">\n          <div class=\"form-group\">\n            <input\n              value=\"{{ todo }}\"\n              (change)=\"updateBody($event)\"\n              class=\"input\"\n              type=\"text\"\n              placeholder=\"Add a new todo\"\n            />\n            <button class=\"cta shrink !grow-0\" type=\"submit\">Add</button>\n          </div>\n        </form>\n        <ul class=\"todo-list\">\n          <li class=\"todo-item\" *ngFor=\"let todo of todos\">\n            <div class=\"todo-item__content\">\n              <input\n                id=\"{{ todo.id }}\"\n                value=\" {{ todo.id }} \"\n                [checked]=\"todo.completed\"\n                (change)=\"(updateCompleted)\"\n                class=\"input\"\n                type=\"checkbox\"\n              />\n              <label for=\" {{ todo.id }} \">{{ todo.todo }}</label>\n            </div>\n            <button\n              (click)=\"deleteTodo(todo.id!)\"\n              class=\"todo-item__delete cta\"\n              type=\"button\"\n            >\n              <svg\n                width=\"24\"\n                height=\"24\"\n                viewBox=\"0 0 24 24\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  d=\"M19 6.41L17.59 5L12 10.59L6.41 5L5 6.41L10.59 12L5 17.59L6.41 19L12 13.41L17.59 19L19 17.59L13.41 12L19 6.41Z\"\n                  fill=\"currentColor\"\n                />\n              </svg>\n            </button>\n          </li>\n        </ul>\n      </div>\n    </section>\n  </main>","// ./src/app/todo/todo.component.ts\n\nimport { Component, Input, OnInit } from '@angular/core';\nimport { Todo, Todos, TodoService } from '../todo.service';\n@Component({\n  selector: 'app-todo',\n  templateUrl: './todo.component.html',\n  styleUrls: ['./todo.component.scss'],\n})\nexport class TodoComponent implements OnInit {\n  todos: Todos = [];\n  todo = '';\n  constructor(private todoService: TodoService) {}\n  // list todos on init\n  ngOnInit(): void {\n    this.listTodos();\n  }\n  /**\n   * function to update the todo body\n   * @param event event\n   */\n  updateBody(event: any) {\n    this.todo = event.target.value;\n    console.log({ body: this.todo });\n  }\n  /**\n   * function to update the todo completed state\n   */\n  updateCompleted(event: any) {\n    const { currentTarget } = event;\n    this.updateTodo({ id: currentTarget.id, completed: currentTarget.checked });\n    console.log({ currentTarget });\n  }\n  /**\n   * function to list todos\n   */\n  listTodos() {\n    this.todoService.listTodos().then((todos) => {\n      this.todos = todos;\n      console.log({ todos });\n    });\n  }\n  /**\n   * function to add a todo\n   * @param event event\n   */\n  addTodo(event: any) {\n    console.log({ event });\n    event.preventDefault();\n    const todo = {\n      todo: this.todo,\n      completed: false,\n      userId: 1,\n    };\n    this.todoService.addTodo(todo).then((todo) => {\n      this.todos.push(todo);\n      this.todo = '';\n      console.log({ todo });\n    });\n  }\n  /**\n   * function to update a todo\n   * @param param0 todo to update\n   */\n  updateTodo({ id, completed }: Todo) {\n    this.todoService.updateTodo({ id, completed }).then((todo) => {\n      this.todos.push(todo);\n      console.log({ todo });\n      console.log({ todos: this.todos });\n    });\n  }\n  /**\n   * function to delete a todo\n   * @param id - id of todo to delete\n   */\n  deleteTodo(id: number) {\n    this.todoService.deleteTodo(id).then((todo) => {\n      this.todos = this.todos.filter((todo) => todo.id !== id);\n      console.log({ todo });\n    });\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}