{"ast":null,"code":"import _asyncToGenerator from \"/Users/mehulsharma/projects/practice/passkeys-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (yield _this.authService.isLoggedin()) {\n        return true;\n      } else {\n        _this.router.navigate(['/login']);\n        return false;\n      }\n    })();\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;;AAOA,OAAM,MAAOA,SAAS;EACpBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,gBAAW,GAAXD,WAAW;IAAuB,WAAM,GAANC,MAAM;EAAW;EACjEC,WAAW;IAAA;IAAA;MACf,UAAU,KAAI,CAACF,WAAW,CAACG,UAAU,EAAE,EAAE;QACvC,OAAO,IAAI;OACZ,MAAM;QACL,KAAI,CAACF,MAAM,CAACG,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;QAChC,OAAO,KAAK;;IACb;EACH;;AATWN,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;SAATA,SAAS;EAAAO,SAATP,SAAS;EAAAQ,YAFR;AAAM","names":["AuthGuard","constructor","authService","router","canActivate","isLoggedin","navigate","factory","providedIn"],"sourceRoot":"","sources":["/Users/mehulsharma/projects/practice/passkeys-angular/src/app/auth.guard.ts"],"sourcesContent":["// ./src/app/auth.guard.ts\nimport { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from './auth.service';\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n  async canActivate(): Promise<boolean> {\n    if (await this.authService.isLoggedin()) {\n      return true;\n    } else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}